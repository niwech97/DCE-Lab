c("apollo", "crossdes", "DoE.base", "Ecdat", "gmnl", "lmtest", "mded",
"mlogit", "support.CEs", "support.BWS", "support.BWS2"),
repos = c("https://cran.rstudio.com/"),
dep = TRUE)
}
if(!require(readr)){
install.packages("readr")
}
if(!require(ggplot2)){
install.packages("ggplot2")
}
if(!require(dplyr)){
install.packages("dplyr")
}
#---------------------------------LIBRARIES-------------------------------------
# Load the packages in the libraries
#load libraries
library(support.CEs)
library(survival)
library(stats)
library(mded)
library(DoE.base)
library(readr)
library(ggplot2)
library(dplyr)
#------------------------------BUILD DIRECTORY----------------------------------
#Set our working directory
working.dir <- getwd()
# Create the folders I will use
output.folders <- c("0.Data","1.Learn.tech","2.Pract.tech","3.Test.tech")
# Check to see if the folders exist in the working directory and if they don't,
# use the following loop.
# The following loop checks the output.folders list and checks to see
# if the folders exist in the working directory. If they don't it will create
# them.
# Make the folders using this loop code
for(i in 1:length(output.folders))
if(file.exists(output.folders[i]) == FALSE)
dir.create(output.folders[i])
#-------- Pathways----------
# The following is a directory of the pathways to each of our output folders
#Path to 0.Data
path.d <- paste(working.dir,"/",output.folders[1],"/",sep="")
# Path to 1.Learn.tech
path.l <- paste(working.dir,"/",output.folders[2], "/", sep="")
# Path to 2.Pract.tech
path.p <- paste(working.dir,"/",output.folders[3], "/", sep="")
# Path to 3.Test.tech
path.t <- paste(working.dir,"/",output.folders[4], "/", sep="")
#--------------------------------DATA DOWLOAD-----------------------------------
# The following are the raw data files used in the practicing techniques section
# of this analysis:
# The following are the datasets I used for the testing techniques section of
# this analysis:
#-----------------------------------WORKFLOW------------------------------------
# In our working directory I created 4 pathways to different folders with
# specific outputs
#
#           - 0. Data.sets -> the path to this folder is: path.d
#                 (This folder contains the raw data used in our learning,
#                 practicing and testing techniques sections)
#
#           - 1. Learn.tech  -> the path to this folder is: path.l
#                 (This folder contains the scripts and outputs I produced from
#                 learning the techniques)
#
#           - 2. Pract.tech -> the path to this folder is: path.p
#                 (This folder contains the scripts and outputs I produced from
#                  our test dataset)
#
#           - 3. Test.tech -> the path to this folder is: path.t
#                 (This folder contains the outputs I produced from our real
#                 dataset)
#-----------Source the other scripts-----------
source("1.LearningDesign.R")
source("2.PracticingDesign.R")
source("3.TestDesign.R")
source("4.LearningAnalysis.R")
source("5.PracticingAnalysis.R")
source("6.TestAnalysis.R")
#################################END MAIN SCRIPT################################
dm.rd
dm.rd
# Next we want to call in our respondent data:
res <- data.frame(ID = c(1:30), BLOCK = rep(c(1:3), times = 10),
q1 = c(2, 2, 2, 1, 2, 1, 1, 2, 1, 3, 2, 1, 3, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 3, 2, 1, 3, 2, 1),
q2 = c(1, 2, 3, 1, 2, 2, 1, 2, 1, 3, 2, 2, 3, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 3, 2, 1),
q3 = c(2, 1, 2, 1, 1, 2, 1, 3, 1, 1, 1, 2, 1, 3, 2, 1, 1, 2, 3, 2, 3, 3, 2, 1, 1, 2, 2, 1, 3, 3))
ds<-make.dataset(respondent.dataset = res,
design.matrix = dm.rd,
choice.indicators = c("q1","q2","q3"))
ds
x2P<-count(ds, vars= X2)
x2P
almost<-count(ds,vars=level)
new.object<-almost[2,]
almost<-count(ds,vars=level)
find.p<-function(level,new.object){
almost<-count(ds,vars=level)
new.object<-almost[2,]
}
x2P
find.p(X2,x2P)
find.p(X2,x2P)
if(!require(plyr)){
install.packages("plyr")
}
if(!require(plyr)){
install.packages("plyr")
}
if(!require(dplyr)){
install.packages("dplyr")
}
find.p<-function(level,new.object){
almost<-count(ds,vars=level)
new.object<-almost[2,]
}
find.p(X2,x2P)
find.p(X2,x2P)
find.p<-function(level,new.object){
new.object <- ldply(ds, function(c) sum(c==level))
}
find.p(X2,x2P)
find.p("X2",x2P)
find.p("X2",x2P)
find.p<-function(level,new.object){
new.object <- ldply(ds, function(c) sum(c==level))
}
find.p("X2",x2P)
find.p<-function(level,new.object){
new.object <- ldply(ds, function(c) sum(c=="level"))
}
find.p("X2",x2P)
find.p(X2,x2P)
find.p(X2,x2P)
x2p
x2P
find.p(X2,x2P)
find.p<-function(level,new.object){
almost<-count(ds,vars=level)
new.object<-almost[2,]
}
find.p(X2,x2P)
x2P
find.p(X2,x2P.2)
find.p(X2,x2P.2)
################################################################################
#                              MAIN SCRIPT                                     #
################################################################################
#----------------------------TABLE OF CONTENTS----------------------------------
# - Overview
# - Packages downloaded
# - Libraries
# - Data Download
# - Workflow
# - Source the rest of the code
################################################################################
#---------------------------------OVERVIEW--------------------------------------
#The following contents within this main directory include the packages,
#libraries, dataset and the workflow that is used in this analysis. For the
#purpose of this analysis the scripts should be run in the folling order to gain
#replicatory results:
#   MainScript:(This included data organization with the overview of the
#                 workflow used in this project)
#
#  1. LearningDesign: (This script was used to learn how to design a DCE
#                      through the use of 2 academic papers and one online guide)
#
#  2. PracticingDesign: (This includes our creation of our own attributes and
#                        the design I created from them)
#
#  3. TestingDesign: (This includes the design I created from attributes
#                     provided to us in an academic paper)
#
#  4. LearningAnalysis:(This script was used to learn how to analyze a DCE
#                      through the use of 2 academic papers and one online guide)
#
#  5. PracticingAnalysis:(This script includes an analysis on a dataset I created)
#
#  6. TestAnalysis:
#
#
#
#------------------------------PACKAGE DOWNLOAD---------------------------------
# This is a list of the packages used for the design
if(!require(readr)){
install.packages("DCchoice",
repos = c("http://www.bioconductor.org/packages/release/bioc",
"https://cran.rstudio.com/"),
dep = TRUE)
}
if(!require(readr)){
install.packages(
c("apollo", "crossdes", "DoE.base", "Ecdat", "gmnl", "lmtest", "mded",
"mlogit", "support.CEs", "support.BWS", "support.BWS2"),
repos = c("https://cran.rstudio.com/"),
dep = TRUE)
}
if(!require(readr)){
install.packages("readr")
}
if(!require(ggplot2)){
install.packages("ggplot2")
}
if(!require(dplyr)){
install.packages("dplyr")
}
#---------------------------------LIBRARIES-------------------------------------
# Load the packages in the libraries
#load libraries
library(support.CEs)
library(survival)
library(stats)
library(mded)
library(DoE.base)
library(readr)
library(ggplot2)
library(dplyr)
#------------------------------BUILD DIRECTORY----------------------------------
#Set our working directory
working.dir <- getwd()
# Create the folders I will use
output.folders <- c("0.Data","1.Learn.tech","2.Pract.tech","3.Test.tech")
# Check to see if the folders exist in the working directory and if they don't,
# use the following loop.
# The following loop checks the output.folders list and checks to see
# if the folders exist in the working directory. If they don't it will create
# them.
# Make the folders using this loop code
for(i in 1:length(output.folders))
if(file.exists(output.folders[i]) == FALSE)
dir.create(output.folders[i])
#-------- Pathways----------
# The following is a directory of the pathways to each of our output folders
#Path to 0.Data
path.d <- paste(working.dir,"/",output.folders[1],"/",sep="")
# Path to 1.Learn.tech
path.l <- paste(working.dir,"/",output.folders[2], "/", sep="")
# Path to 2.Pract.tech
path.p <- paste(working.dir,"/",output.folders[3], "/", sep="")
# Path to 3.Test.tech
path.t <- paste(working.dir,"/",output.folders[4], "/", sep="")
#--------------------------------DATA DOWLOAD-----------------------------------
# The following are the raw data files used in the practicing techniques section
# of this analysis:
# The following are the datasets I used for the testing techniques section of
# this analysis:
#-----------------------------------WORKFLOW------------------------------------
# In our working directory I created 4 pathways to different folders with
# specific outputs
#
#           - 0. Data.sets -> the path to this folder is: path.d
#                 (This folder contains the raw data used in our learning,
#                 practicing and testing techniques sections)
#
#           - 1. Learn.tech  -> the path to this folder is: path.l
#                 (This folder contains the scripts and outputs I produced from
#                 learning the techniques)
#
#           - 2. Pract.tech -> the path to this folder is: path.p
#                 (This folder contains the scripts and outputs I produced from
#                  our test dataset)
#
#           - 3. Test.tech -> the path to this folder is: path.t
#                 (This folder contains the outputs I produced from our real
#                 dataset)
#-----------Source the other scripts-----------
source("1.LearningDesign.R")
source("2.PracticingDesign.R")
source("3.TestDesign.R")
source("4.LearningAnalysis.R")
source("5.PracticingAnalysis.R")
source("6.TestAnalysis.R")
#################################END MAIN SCRIPT################################
x3p<-xtabs(~X3,ds)
x3p
find.p<-function(level,new.object){
almost<-xtabs(~level,ds)
}
# Here is the test:
find.p(X3,x3p)
rm(x3p)
x3p<-xtabs(~X3,ds)
x3p
rm(x3p)
x3p
# Here is the test:
find.p(X3,x3p)
# Here is the test:
find.p(X3,x3p)
ds
ds
x2p<-xtabs(~X2,ds)
x3p<-xtabs(~X3,ds)
y2p<-xtabs(~Y2,ds)
y3p<-xtabs(~Y3,ds)
zp<-xtabs(~Z,ds)
x2p
x3p
y2p
y3p
zp
x2c<-xtabs(~X2+RES,ds)
x3c<-xtabs(~X3+RES,ds)
y2c<-xtabs(~Y2+RES,ds)
y3c<-xtabs(~Y3+RES,ds)
zc<-xtabs(~Z+RES,ds)
x2c
x3c
y2c
y3c
zc
# This piece worked! I still need a way to get the X1 and X2 numbers, but adding
# [2,3] will return the chosen number of that level.
x2c[2,3]
# This piece worked! I still need a way to get the X1 and X2 numbers, but adding
# [2,3] will return the chosen number of that level.
x2c[2,2]
zc[2:4,2]
if
?if
??if
x1c<-ds[which(ds$RES==TRUE,ds$X2==0,ds$X3==0)]
x1c<-ds[which(ds$RES==TRUE,ds$X2==0,ds$X3==0)]
x1c<-ds[which(ds$RES==TRUE)]
x1c<-subset(ds$RES==TRUE)
chosen.ds<-(ds$RES==TRUE)
chosen.ds
chosen.ds<-ds[which(RES=TRUE & X2=0 & X3=0)]
chosen.ds<-ds[which(RES==TRUE & X2==0 & X3==0)]
chosen.ds<-ds[which(RES==TRUE & X2==0 & X3==0),]
detach(ds)
chosen.ds<-ds[which(ds$RES=='TRUE' & ds$X2=='0' & ds$X3=='0'),]
chosen.ds
chosen.ds
ds
x1c<-ds[which(ds$RES=='TRUE' & ds$X2=='0' & ds$X3=='0' & ds$ASC=='1'),]
x1c
length(x1c)
x1c<-length(x1c)
y1c<-ds[which(ds$RES=='TRUE' & ds$Y2=='0' & ds$Y3=='0' & ds$ASC=='1'),]
y1c<-length(y1c)
y1c
p<-60
p<-60
x1c<-length(x1c)
x2c<-x2c[2,2]
x3c<-x3c[2,2]
y1c<-length(y1c)
y2c<-y2c[2,2]
y3c<-y3c[2,2]
z1c<-zc[2,2]
z2c<-zc[3,2]
z3c<-zc[4,2]
# Now we can check to make sure there is only the one correct value
p
p
x1c
x2c
x3c
y1c
y2c
y3c
z1c
z2c
z3c
x1<-x1c/p
x2<-x2c/p
x3<-x3c/p
y1<-y1c/p
y2<-y2c/p
y3<-y3c/p
z1<-z1c/p
z2<-z2c/p
z3<-z3c/p
x1
x2
x3
y1
y2
y3
z1
z2
z3
################################################################################
#                              MAIN SCRIPT                                     #
################################################################################
#----------------------------TABLE OF CONTENTS----------------------------------
# - Overview
# - Packages downloaded
# - Libraries
# - Data Download
# - Workflow
# - Source the rest of the code
################################################################################
#---------------------------------OVERVIEW--------------------------------------
#The following contents within this main directory include the packages,
#libraries, dataset and the workflow that is used in this analysis. For the
#purpose of this analysis the scripts should be run in the folling order to gain
#replicatory results:
#   MainScript:(This included data organization with the overview of the
#                 workflow used in this project)
#
#  1. LearningDesign: (This script was used to learn how to design a DCE
#                      through the use of 2 academic papers and one online guide)
#
#  2. PracticingDesign: (This includes our creation of our own attributes and
#                        the design I created from them)
#
#  3. TestingDesign: (This includes the design I created from attributes
#                     provided to us in an academic paper)
#
#  4. LearningAnalysis:(This script was used to learn how to analyze a DCE
#                      through the use of 2 academic papers and one online guide)
#
#  5. PracticingAnalysis:(This script includes an analysis on a dataset I created)
#
#  6. TestAnalysis:
#
#
#
#------------------------------PACKAGE DOWNLOAD---------------------------------
# This is a list of the packages used for the design
if(!require(readr)){
install.packages("DCchoice",
repos = c("http://www.bioconductor.org/packages/release/bioc",
"https://cran.rstudio.com/"),
dep = TRUE)
}
if(!require(readr)){
install.packages(
c("apollo", "crossdes", "DoE.base", "Ecdat", "gmnl", "lmtest", "mded",
"mlogit", "support.CEs", "support.BWS", "support.BWS2"),
repos = c("https://cran.rstudio.com/"),
dep = TRUE)
}
if(!require(readr)){
install.packages("readr")
}
if(!require(ggplot2)){
install.packages("ggplot2")
}
if(!require(dplyr)){
install.packages("dplyr")
}
#---------------------------------LIBRARIES-------------------------------------
# Load the packages in the libraries
#load libraries
library(support.CEs)
library(survival)
library(stats)
library(mded)
library(DoE.base)
library(readr)
library(ggplot2)
library(dplyr)
#------------------------------BUILD DIRECTORY----------------------------------
#Set our working directory
working.dir <- getwd()
# Create the folders I will use
output.folders <- c("0.Data","1.Learn.tech","2.Pract.tech","3.Test.tech")
# Check to see if the folders exist in the working directory and if they don't,
# use the following loop.
# The following loop checks the output.folders list and checks to see
# if the folders exist in the working directory. If they don't it will create
# them.
# Make the folders using this loop code
for(i in 1:length(output.folders))
if(file.exists(output.folders[i]) == FALSE)
dir.create(output.folders[i])
#-------- Pathways----------
# The following is a directory of the pathways to each of our output folders
#Path to 0.Data
path.d <- paste(working.dir,"/",output.folders[1],"/",sep="")
# Path to 1.Learn.tech
path.l <- paste(working.dir,"/",output.folders[2], "/", sep="")
# Path to 2.Pract.tech
path.p <- paste(working.dir,"/",output.folders[3], "/", sep="")
# Path to 3.Test.tech
path.t <- paste(working.dir,"/",output.folders[4], "/", sep="")
#--------------------------------DATA DOWLOAD-----------------------------------
# The following are the raw data files used in the practicing techniques section
# of this analysis:
# The following are the datasets I used for the testing techniques section of
# this analysis:
#-----------------------------------WORKFLOW------------------------------------
# In our working directory I created 4 pathways to different folders with
# specific outputs
#
#           - 0. Data.sets -> the path to this folder is: path.d
#                 (This folder contains the raw data used in our learning,
#                 practicing and testing techniques sections)
#
#           - 1. Learn.tech  -> the path to this folder is: path.l
#                 (This folder contains the scripts and outputs I produced from
#                 learning the techniques)
#
#           - 2. Pract.tech -> the path to this folder is: path.p
#                 (This folder contains the scripts and outputs I produced from
#                  our test dataset)
#
#           - 3. Test.tech -> the path to this folder is: path.t
#                 (This folder contains the outputs I produced from our real
#                 dataset)
#-----------Source the other scripts-----------
source("1.LearningDesign.R")
source("2.PracticingDesign.R")
source("3.TestDesign.R")
source("4.LearningAnalysis.R")
source("5.PracticingAnalysis.R")
source("6.TestAnalysis.R")
#################################END MAIN SCRIPT################################
